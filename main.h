// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef main_h
#define main_h

#include <FL/Fl.H>
void bt_callback(Fl_Widget*, void* userdata);
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *window_main;
#include <FL/Fl_Input.H>
extern Fl_Input *input;
#include <FL/Fl_Button.H>
extern void bt_callback(Fl_Button*, void*);
extern Fl_Button *btnTest;
#include <FL/Fl_Return_Button.H>
extern void bt_callback(Fl_Return_Button*, void*);
extern Fl_Return_Button *btnClose;
#include <FL/Fl_Input.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Box.H>

#include <iostream>
#include <fstream>
#include <cstring>
#include <ctime>
#include <cstdlib>

using namespace std;

class Type{
public:
    Type(char *type0 = (char*)"*", char *property10 = (char*)"*", char *property20 = (char*)"*", char *property30 = (char*)"*");
    void display() const;
    bool ifSameType (char *type0) const;
    void copyType(Type t);

protected:
    char type[21];
    char property1[21];
    char property2[21];
    char property3[21];

};


class User{
public:
    User(char *owner = (char*)"*", char *address = (char*)"*", char *phoneNumber = (char*)"*", char *email = (char*)"*");
    void display() const;
    bool ifSameUser(const char *owner0) const;
    char* copyUserName();
    bool ifformal();
    void formalize();
    void copyUser(User u);

protected:
    char owner[9];
    char address[40];
    char phoneNumber[12];
    char email[40];
    bool formal;

};

class Item:public Type, public User {
public:
    Item(char *name0 = (char*)"*", char *detail0 = (char*)"*",
         char *typeDetaila0 = (char*)"*", char *typeDetailb0 = (char*)"*", char *typeDetailc0 = (char*)"*",
         char *owner0 = (char*)"*", char *address0 = (char*)"*", char *phoneNumber0 = (char*)"*", char *email0 = (char*)"*",
         char *type0 = (char*)"*", char *property10 = (char*)"*", char *property20 = (char*)"*", char *property30 = (char*)"*");
    void display() const;
    bool ifSameName (char *name0) const;
    bool ifSameDetail(char *detail0) const;

private:
    char name[21];
    char detail[40];
    char typeDetaila[21];
    char typeDetailb[21];
    char typeDetailc[21];

};

void main_menu();
void popWindow(const char* txt);

void log_ad(Fl_Widget* w);
void checkPassword(Fl_Widget* w, void* v);
void checkUser(Fl_Widget* w, void* v);
void ad_menu();
void addType(Fl_Widget* w);
void delType(Fl_Widget* w);
void displayAllType(Fl_Widget* w);
void manageUser(Fl_Widget* w);
void displayAllUsers(Fl_Widget* w);
void manageNewUsers(Fl_Widget* w);
void admitUser(Fl_Widget* w, void* v);
void deleteUser(Fl_Widget* w, void* v);

void log_user(Fl_Widget* w);
void sign(Fl_Widget* w);
void recordUser(Fl_Widget* w);
void user_menu();
void addItem(Fl_Widget* w);
void delItem(Fl_Widget* w);
void displayAllItem(Fl_Widget* w);
void searchItem(Fl_Widget* w);



#endif
